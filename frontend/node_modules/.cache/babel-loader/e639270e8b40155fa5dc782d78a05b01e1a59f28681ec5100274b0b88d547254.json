{"ast":null,"code":"var _jsxFileName = \"/Users/harish/Desktop/project/meet-clone/frontend/src/components/Input/index.js\",\n  _this = this;\nimport React from 'react';\nimport './input.css';\nimport { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = function (_ref) {\n  let {\n    label,\n    placeholder,\n    onChange,\n    style,\n    showLabel = true\n  } = _ref;\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'text';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [showLabel && /*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 23\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      className: \"input\",\n      placeholder: placeholder,\n      onChange: onChange,\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n_c = Input;\nexport const PasswordInput = _ref2 => {\n  let {\n    label,\n    placeholder,\n    onChange,\n    style,\n    showLabel = true\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [showLabel && /*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      placeholder: placeholder,\n      onChange: onChange,\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n_c2 = PasswordInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"PasswordInput\");","map":{"version":3,"names":["React","AiFillEye","AiFillEyeInvisible","Input","label","placeholder","onChange","style","showLabel","type","PasswordInput"],"sources":["/Users/harish/Desktop/project/meet-clone/frontend/src/components/Input/index.js"],"sourcesContent":["import React from 'react'\nimport './input.css'\nimport { AiFillEye,AiFillEyeInvisible } from \"react-icons/ai\";\n\n\n\nexport const Input = ({label,placeholder,onChange,style,showLabel=true},type='text') => {\n  return (\n    <div className='input-container'>\n        {showLabel && <label>{label}</label>}\n        <input type={type} className='input' placeholder={placeholder} onChange={onChange} style={style}></input>\n    </div>\n  )\n}\n\nexport const PasswordInput = ({label,placeholder,onChange,style,showLabel=true}) => {\n    return (\n      <div className='input-container'>\n          {showLabel && <label>{label}</label>}\n          <input className='input' placeholder={placeholder} onChange={onChange} style={style}></input>\n      </div>\n    )\n  }"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,SAAS,EAACC,kBAAkB,QAAQ,gBAAgB;AAAC;AAI9D,OAAO,MAAMC,KAAK,GAAG,gBAAmE;EAAA,IAAlE;IAACC,KAAK;IAACC,WAAW;IAACC,QAAQ;IAACC,KAAK;IAACC,SAAS,GAAC;EAAI,CAAC;EAAA,IAACC,IAAI,uEAAC,MAAM;EACjF,oBACE;IAAK,SAAS,EAAC,iBAAiB;IAAA,WAC3BD,SAAS,iBAAI;MAAA,UAAQJ;IAAK;MAAA;MAAA;MAAA;IAAA,SAAS,eACpC;MAAO,IAAI,EAAEK,IAAK;MAAC,SAAS,EAAC,OAAO;MAAC,WAAW,EAAEJ,WAAY;MAAC,QAAQ,EAAEC,QAAS;MAAC,KAAK,EAAEC;IAAM;MAAA;MAAA;MAAA;IAAA,SAAS;EAAA;IAAA;IAAA;IAAA;EAAA,SACvG;AAEV,CAAC;AAAA,KAPYJ,KAAK;AASlB,OAAO,MAAMO,aAAa,GAAG,SAAuD;EAAA,IAAtD;IAACN,KAAK;IAACC,WAAW;IAACC,QAAQ;IAACC,KAAK;IAACC,SAAS,GAAC;EAAI,CAAC;EAC3E,oBACE;IAAK,SAAS,EAAC,iBAAiB;IAAA,WAC3BA,SAAS,iBAAI;MAAA,UAAQJ;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eACpC;MAAO,SAAS,EAAC,OAAO;MAAC,WAAW,EAAEC,WAAY;MAAC,QAAQ,EAAEC,QAAS;MAAC,KAAK,EAAEC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3F;AAEV,CAAC;AAAA,MAPUG,aAAa;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}