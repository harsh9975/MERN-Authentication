{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { registerUser, userLogin } from './authActions';\n\n// initialize token from local storage\nconst token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\nconst userInfo = localStorage.getItem('userInfo') ? localStorage.getItem('userInfo') : null;\nconsole.log(\"token\", token);\nconst initialState = {\n  loading: false,\n  userInfo,\n  token,\n  error: null,\n  success: false\n};\nconst authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    logout: state => {\n      localStorage.removeItem('token'); // delete token from storage\n      state.loading = false;\n      state.userInfo = null;\n      state.token = null;\n      state.error = null;\n    },\n    setCredentials: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.userInfo = payload;\n    }\n  },\n  extraReducers: {\n    // login user\n    [userLogin.pending]: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    [userLogin.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.loading = false;\n      state.userInfo = payload;\n      state.token = payload.token;\n    },\n    [userLogin.rejected]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.loading = false;\n      state.error = payload;\n    },\n    // register user\n    [registerUser.pending]: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    [registerUser.fulfilled]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.loading = false;\n      state.success = true; // registration successful\n    },\n\n    [registerUser.rejected]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.loading = false;\n      state.error = payload;\n    }\n  }\n});\nexport const {\n  logout,\n  setCredentials\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","registerUser","userLogin","token","localStorage","getItem","userInfo","console","log","initialState","loading","error","success","authSlice","name","reducers","logout","state","removeItem","setCredentials","payload","extraReducers","pending","fulfilled","rejected","actions","reducer"],"sources":["/Users/harish/Desktop/project/meet-clone/frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { registerUser, userLogin } from './authActions'\n\n// initialize token from local storage\nconst token = localStorage.getItem('token')\n  ? localStorage.getItem('token')\n  : null\nconst userInfo = localStorage.getItem('userInfo') ?\nlocalStorage.getItem('userInfo') : null\n \n  console.log(\"token\",token)\n\nconst initialState = {\n  loading: false,\n  userInfo,\n  token,\n  error: null,\n  success: false,\n}\n\nconst authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      localStorage.removeItem('token') // delete token from storage\n      state.loading = false\n      state.userInfo = null\n      state.token = null\n      state.error = null\n    },\n    setCredentials: (state, { payload }) => {\n      state.userInfo = payload\n    },\n  },\n  extraReducers: {\n    // login user\n    [userLogin.pending]: (state) => {\n      state.loading = true\n      state.error = null\n    },\n    [userLogin.fulfilled]: (state, { payload }) => {\n      state.loading = false\n      state.userInfo = payload\n      state.token = payload.token\n    },\n    [userLogin.rejected]: (state, { payload }) => {\n      state.loading = false\n      state.error = payload\n    },\n    // register user\n    [registerUser.pending]: (state) => {\n      state.loading = true\n      state.error = null\n    },\n    [registerUser.fulfilled]: (state, { payload }) => {\n      state.loading = false\n      state.success = true // registration successful\n    },\n    [registerUser.rejected]: (state, { payload }) => {\n      state.loading = false\n      state.error = payload\n    },\n  },\n})\n\nexport const { logout, setCredentials } = authSlice.actions\n\nexport default authSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,EAAEC,SAAS,QAAQ,eAAe;;AAEvD;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GACvCD,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAC7B,IAAI;AACR,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACjDD,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI;AAErCE,OAAO,CAACC,GAAG,CAAC,OAAO,EAACL,KAAK,CAAC;AAE5B,MAAMM,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdJ,QAAQ;EACRH,KAAK;EACLQ,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBb,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC,EAAC;MACjCD,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACX,QAAQ,GAAG,IAAI;MACrBW,KAAK,CAACd,KAAK,GAAG,IAAI;MAClBc,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC;IACDQ,cAAc,EAAE,CAACF,KAAK,WAAkB;MAAA,IAAhB;QAAEG;MAAQ,CAAC;MACjCH,KAAK,CAACX,QAAQ,GAAGc,OAAO;IAC1B;EACF,CAAC;EACDC,aAAa,EAAE;IACb;IACA,CAACnB,SAAS,CAACoB,OAAO,GAAIL,KAAK,IAAK;MAC9BA,KAAK,CAACP,OAAO,GAAG,IAAI;MACpBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC;IACD,CAACT,SAAS,CAACqB,SAAS,GAAG,CAACN,KAAK,YAAkB;MAAA,IAAhB;QAAEG;MAAQ,CAAC;MACxCH,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACX,QAAQ,GAAGc,OAAO;MACxBH,KAAK,CAACd,KAAK,GAAGiB,OAAO,CAACjB,KAAK;IAC7B,CAAC;IACD,CAACD,SAAS,CAACsB,QAAQ,GAAG,CAACP,KAAK,YAAkB;MAAA,IAAhB;QAAEG;MAAQ,CAAC;MACvCH,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGS,OAAO;IACvB,CAAC;IACD;IACA,CAACnB,YAAY,CAACqB,OAAO,GAAIL,KAAK,IAAK;MACjCA,KAAK,CAACP,OAAO,GAAG,IAAI;MACpBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC;IACD,CAACV,YAAY,CAACsB,SAAS,GAAG,CAACN,KAAK,YAAkB;MAAA,IAAhB;QAAEG;MAAQ,CAAC;MAC3CH,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACL,OAAO,GAAG,IAAI,EAAC;IACvB,CAAC;;IACD,CAACX,YAAY,CAACuB,QAAQ,GAAG,CAACP,KAAK,YAAkB;MAAA,IAAhB;QAAEG;MAAQ,CAAC;MAC1CH,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGS,OAAO;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,MAAM;EAAEG;AAAe,CAAC,GAAGN,SAAS,CAACY,OAAO;AAE3D,eAAeZ,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}