{"ast":null,"code":"var _jsxFileName = \"/Users/harish/Desktop/project/meet-clone/frontend/src/routing/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = () => {\n  _s();\n  const {\n    userInfo\n  } = useSelector(state => state.auth);\n\n  // show unauthorized screen if no user is found in redux store\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unauthorized\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Unauthorized :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), \" to gain access\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoute, \"tm9u9ATcYNEYVCp8P5F3TqiqzZ4=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useSelector","NavLink","Outlet","ProtectedRoute","userInfo","state","auth"],"sources":["/Users/harish/Desktop/project/meet-clone/frontend/src/routing/ProtectedRoute.js"],"sourcesContent":["\nimport { useSelector } from 'react-redux'\nimport { NavLink, Outlet } from 'react-router-dom'\n\nconst ProtectedRoute = () => {\n  const { userInfo } = useSelector((state) => state.auth)\n\n  // show unauthorized screen if no user is found in redux store\n  if (!userInfo) {\n    return (\n      <div className='unauthorized'>\n        <h1>Unauthorized :(</h1>\n        <span>\n          <NavLink to='/login'>Login</NavLink> to gain access\n        </span>\n      </div>\n    )\n  }\n\n  return <Outlet />\n}\n\nexport default ProtectedRoute"],"mappings":";;AACA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,EAAEC,MAAM,QAAQ,kBAAkB;AAAA;AAElD,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM;IAAEC;EAAS,CAAC,GAAGJ,WAAW,CAAEK,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;;EAEvD;EACA,IAAI,CAACF,QAAQ,EAAE;IACb,oBACE;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QAAA,UAAI;MAAe;QAAA;QAAA;QAAA;MAAA,QAAK,eACxB;QAAA,wBACE,QAAC,OAAO;UAAC,EAAE,EAAC,QAAQ;UAAA,UAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAU,mBACtC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACH;EAEV;EAEA,oBAAO,QAAC,MAAM;IAAA;IAAA;IAAA;EAAA,QAAG;AACnB,CAAC;AAAA,GAhBKD,cAAc;EAAA,QACGH,WAAW;AAAA;AAAA,KAD5BG,cAAc;AAkBpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}