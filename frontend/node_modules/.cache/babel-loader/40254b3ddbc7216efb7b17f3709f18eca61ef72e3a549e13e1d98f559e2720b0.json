{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { registerUser, userLogin } from './authActions';\n\n// initialize userToken from local storage\nconst userToken = localStorage.getItem('userToken') ? localStorage.getItem('userToken') : null;\nconst initialState = {\n  loading: false,\n  userInfo: null,\n  userToken,\n  error: null,\n  success: false\n};\nconst authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    logout: state => {\n      localStorage.removeItem('userToken'); // delete token from storage\n      state.loading = false;\n      state.userInfo = null;\n      state.userToken = null;\n      state.error = null;\n    },\n    setCredentials: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.userInfo = payload;\n    }\n  },\n  extraReducers: {\n    // login user\n    [userLogin.pending]: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    [userLogin.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      console.log(\"payload.userToken\", payload.token);\n      state.loading = false;\n      state.userInfo = payload;\n      state.userToken = payload.token;\n    },\n    [userLogin.rejected]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.loading = false;\n      state.error = payload;\n    },\n    // register user\n    [registerUser.pending]: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    [registerUser.fulfilled]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.loading = false;\n      state.success = true; // registration successful\n    },\n\n    [registerUser.rejected]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.loading = false;\n      state.error = payload;\n    }\n  }\n});\nexport const {\n  logout,\n  setCredentials\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","registerUser","userLogin","userToken","localStorage","getItem","initialState","loading","userInfo","error","success","authSlice","name","reducers","logout","state","removeItem","setCredentials","payload","extraReducers","pending","fulfilled","console","log","token","rejected","actions","reducer"],"sources":["/Users/harish/Desktop/project/meet-clone/frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { registerUser, userLogin } from './authActions'\n\n// initialize userToken from local storage\nconst userToken = localStorage.getItem('userToken')\n  ? localStorage.getItem('userToken')\n  : null\n\nconst initialState = {\n  loading: false,\n  userInfo: null,\n  userToken,\n  error: null,\n  success: false,\n}\n\nconst authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      localStorage.removeItem('userToken') // delete token from storage\n      state.loading = false\n      state.userInfo = null\n      state.userToken = null\n      state.error = null\n    },\n    setCredentials: (state, { payload }) => {\n      state.userInfo = payload\n    },\n  },\n  extraReducers: {\n    // login user\n    [userLogin.pending]: (state) => {\n      state.loading = true\n      state.error = null\n    },\n    [userLogin.fulfilled]: (state, { payload }) => {\n        console.log(\"payload.userToken\",payload.token)\n      state.loading = false\n      state.userInfo = payload\n      state.userToken = payload.token\n    },\n    [userLogin.rejected]: (state, { payload }) => {\n      state.loading = false\n      state.error = payload\n    },\n    // register user\n    [registerUser.pending]: (state) => {\n      state.loading = true\n      state.error = null\n    },\n    [registerUser.fulfilled]: (state, { payload }) => {\n      state.loading = false\n      state.success = true // registration successful\n    },\n    [registerUser.rejected]: (state, { payload }) => {\n      state.loading = false\n      state.error = payload\n    },\n  },\n})\n\nexport const { logout, setCredentials } = authSlice.actions\n\nexport default authSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,EAAEC,SAAS,QAAQ,eAAe;;AAEvD;AACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC/CD,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GACjC,IAAI;AAER,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE,IAAI;EACdL,SAAS;EACTM,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGX,WAAW,CAAC;EAC5BY,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBX,YAAY,CAACY,UAAU,CAAC,WAAW,CAAC,EAAC;MACrCD,KAAK,CAACR,OAAO,GAAG,KAAK;MACrBQ,KAAK,CAACP,QAAQ,GAAG,IAAI;MACrBO,KAAK,CAACZ,SAAS,GAAG,IAAI;MACtBY,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC;IACDQ,cAAc,EAAE,CAACF,KAAK,WAAkB;MAAA,IAAhB;QAAEG;MAAQ,CAAC;MACjCH,KAAK,CAACP,QAAQ,GAAGU,OAAO;IAC1B;EACF,CAAC;EACDC,aAAa,EAAE;IACb;IACA,CAACjB,SAAS,CAACkB,OAAO,GAAIL,KAAK,IAAK;MAC9BA,KAAK,CAACR,OAAO,GAAG,IAAI;MACpBQ,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC;IACD,CAACP,SAAS,CAACmB,SAAS,GAAG,CAACN,KAAK,YAAkB;MAAA,IAAhB;QAAEG;MAAQ,CAAC;MACtCI,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACL,OAAO,CAACM,KAAK,CAAC;MAChDT,KAAK,CAACR,OAAO,GAAG,KAAK;MACrBQ,KAAK,CAACP,QAAQ,GAAGU,OAAO;MACxBH,KAAK,CAACZ,SAAS,GAAGe,OAAO,CAACM,KAAK;IACjC,CAAC;IACD,CAACtB,SAAS,CAACuB,QAAQ,GAAG,CAACV,KAAK,YAAkB;MAAA,IAAhB;QAAEG;MAAQ,CAAC;MACvCH,KAAK,CAACR,OAAO,GAAG,KAAK;MACrBQ,KAAK,CAACN,KAAK,GAAGS,OAAO;IACvB,CAAC;IACD;IACA,CAACjB,YAAY,CAACmB,OAAO,GAAIL,KAAK,IAAK;MACjCA,KAAK,CAACR,OAAO,GAAG,IAAI;MACpBQ,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC;IACD,CAACR,YAAY,CAACoB,SAAS,GAAG,CAACN,KAAK,YAAkB;MAAA,IAAhB;QAAEG;MAAQ,CAAC;MAC3CH,KAAK,CAACR,OAAO,GAAG,KAAK;MACrBQ,KAAK,CAACL,OAAO,GAAG,IAAI,EAAC;IACvB,CAAC;;IACD,CAACT,YAAY,CAACwB,QAAQ,GAAG,CAACV,KAAK,YAAkB;MAAA,IAAhB;QAAEG;MAAQ,CAAC;MAC1CH,KAAK,CAACR,OAAO,GAAG,KAAK;MACrBQ,KAAK,CAACN,KAAK,GAAGS,OAAO;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,MAAM;EAAEG;AAAe,CAAC,GAAGN,SAAS,CAACe,OAAO;AAE3D,eAAef,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}